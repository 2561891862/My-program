import tkinter as tk
import sqlite3
from tkinter import messagebox
class Application(tk.Frame):
    def __init__(self,master = None):
        super().__init__(master)
        self.master = master
        self.grid()
        self.createWidgets()
    def createWidgets(self):
        self.lblUser = tk.Label(self,text = "用户名")
        self.lblPass1 = tk.Label(self,text = "密码")
        self.lblUser.grid(row = 0,column = 0,sticky = tk.E)
        self.lblPass1.grid(row = 1,column = 0,sticky = tk.E)
        self.entryUser = tk.Entry(self)
        self.entryPass1 = tk.Entry(self,show = '*')
        self.entryUser.grid(row = 0,column = 1,columnspan = 2)
        self.entryPass1.grid(row = 1,column = 1,columnspan = 2)
        self.btnOk = tk.Button(self,text = "注册",command = self.infoReadin)
        self.btnOk.grid(row = 3,column = 1,sticky = tk.E)
        self.btnCancel = tk.Button(self,text = "登录",command = self.infoConfirm)
        self.btnCancel.grid(row = 3,column = 2,sticky = tk.E)
    def OpenRegister(self):
        self.Register = tk.Toplevel(self.master)
        self.Register.title("注册窗口")
        self.lblUser = tk.Label(self.Register,text = "用户名")
        self.lblPass1 = tk.Label(self.Register,text = "密码")
        self.lblPass2 = tk.Label(self.Register,text = "确认密码")
        self.lblUser.grid(row = 0,column = 0,sticky = tk.E)
        self.lblPass1.grid(row = 1,column = 0,sticky = tk.E)
        self.lblPass2.grid(row = 2,column = 0,sticky = tk.E)
        self.entryUser = tk.Entry(self.Register)
        self.entryPass1 = tk.Entry(self.Register,show = '*')
        self.entryPass2 = tk.Entry(self.Register,show = '*')
        self.entryUser.grid(row = 0,column = 1,columnspan = 2)
        self.entryPass1.grid(row = 1,column = 1,columnspan = 2)
        self.entryPass2.grid(row = 2,column = 1,columnspan = 2)
        self.btnOk = tk.Button(self.Register,text = "注册",command = self.infoReadin)
        self.btnOk.grid(row = 3,column = 1,sticky = tk.E)
        self.btnCancel = tk.Button(self.Register,text = "取消",command = self.Register.destroy)
        self.btnCancel.grid(row = 3,column = 2,sticky = tk.W)
    def infoReadin(self):
        username = self.entryUser.get()
        password = self.entryPass1.get()
        confirm_pass = self.entryPass2.get()
        if password == confirm_pass:
            conn = sqlite3.connect(r"c:\python\Userinfo.db")
            cur = conn.cursor()
            affected_rows = cur.execute("select count(*) from Userinfo where Username in (?)",username).fetchone()[0]
            print(affected_rows)
            if affected_rows > 0:
                messagebox.showinfo("用户名已存在，请重新输入")
            else:
                conn.execute("insert into Userinfo(Username,Userpassword)values(?, ?)", (username,password))
                conn.commit()
                messagebox.showinfo("成功","注册成功！")
            self.Register.destroy()
        else:
            print("确认密码与输入密码不一致，请重新输入")
            return
    def infoConfirm(self):
        username = self.entryUser.get()
        password = self.entryPass1.get()
        conn = sqlite3.connect(r"c:\python\Userinfo.db")
        cur = conn.cursor()
        cur.execute("SELECT Userpassword from Userinfo where Username = ?", (username,))
        result = cur.fetchone()
        if not result:  
            messagebox.showinfo("错误", "用户名不存在")
            return
        db_password = result[0] 
        if db_password == password:  
            messagebox.showinfo("成功", "登录成功")
            self.System()  
        else:  
            messagebox.showinfo("错误", "密码错误，请重新输入")
        conn.close()
        
    def System(self):
        self.system = tk.Toplevel(self.master)  
        self.system.title("管理系统")
        self.lblStock = tk.Label(self.system, text = "库存")
        self.lblNewProduct = tk.Label(self.system, text = "新品")
        self.lblTurnover = tk.Label(self.system, text = "流水")
        self.lblStaff = tk.Label(self.system, text = "员工")  
        self.lblStock.grid(row = 0, column = 0, padx = 10, pady = 5)
        self.lblNewProduct.grid(row = 1, column = 0, padx = 10, pady = 5)
        self.lblTurnover.grid(row = 2, column = 0, padx = 10, pady = 5)
        self.lblStaff.grid(row = 3, column = 0, padx = 10, pady = 5)
        self.btnReference1 = tk.Button(self.system, text = "查询",command = self.reference1)  
        self.btnrevise1 = tk.Button(self.system, text = "修改",command = self.revise1)     
        self.btnReference1.grid(row = 0, column = 1, padx = 5)
        self.btnrevise1.grid(row = 0, column = 2, padx = 5)  
        self.btnAdd1 = tk.Button(self.system, text="添加",command = self.add1)     
        self.btnAdd1.grid(row = 1, column = 1, padx = 5)
        self.btnReference2 = tk.Button(self.system, text="查询",command = self.reference2)
        self.btnReference2.grid(row = 2, column = 1, padx = 5)
        self.btnReference3 = tk.Button(self.system, text="查询",command = self.reference3)  
        self.btnAdd2 = tk.Button(self.system, text="添加",command = self.add2)
        self.btnDelete = tk.Button(self.system,text="删除",command = self.Delete)
        self.btnReference3.grid(row = 3, column = 1, padx = 5)
        self.btnAdd2.grid(row=3, column=2, padx=5)
        self.btnDelete.grid(row=3, column=3, padx=5)
    def reference1(self):
        conn = sqlite3.connect(r"c:\python\Stock.db")
        cur = conn.execute("select id,Number from region")
        results = cur.fetchall()
        messagebox.showinfo("库存数据",results)
        conn.close()
    def revise1(self):
        self.revise1 = tk.Toplevel(self.master)  
        self.revise1.title("修改库存")
        self.lblid = tk.Label(self.revise1, text = "id")
        self.lblNumber = tk.Label(self.revise1, text = "更新存量")
        self.entryid = tk.Entry(self.revise1)
        self.entryNumber = tk.Entry(self.revise1)
        self.lblid.grid(row = 0,column = 0,sticky = tk.E)
        self.lblNumber.grid(row = 1,column = 0,sticky = tk.E)
        self.entryid.grid(row = 0,column = 1,columnspan = 2)
        self.entryNumber.grid(row = 1,column = 1,columnspan = 2)
        self.btnOk = tk.Button(self.revise1,text = "修改",command = self.reviseStock)
        self.btnOk.grid(row = 2,column = 1,sticky = tk.E)
        self.btnCancel = tk.Button(self.revise1,text = "取消",command = self.revise1.destroy)
        self.btnCancel.grid(row = 2,column = 2,sticky = tk.W)
    def reviseStock(self):
        Stockid = self.entryid.get()
        StockNumber = self.entryNumber.get()
        conn = sqlite3.connect(r"c:\python\Stock.db")
        conn.execute("update region set Number = ? where id = ?",(stockNumber,stockid))
        conn.commit()
        conn.close()
        messagebox.showinfo("成功","库存修改成功")
    def add1(self):
        self.add1 = tk.Toplevel(self.master)  
        self.system.title("添加新品")
        self.lblid = tk.Label(self.add1, text = "id")
        self.lblName = tk.Label(self.add1, text = "添加新品")
        self.entryid = tk.Entry(self.add1)
        self.entryName = tk.Entry(self.add1)
        self.lblid.grid(row = 0,column = 0,sticky = tk.E)
        self.lblName.grid(row = 1,column = 0,sticky = tk.E)
        self.entryid.grid(row = 0,column = 1,columnspan = 2)
        self.entryName.grid(row = 1,column = 1,columnspan = 2)
        self.btnOk = tk.Button(self.add1,text = "添加",command = self.AddNew)
        self.btnOk.grid(row = 2,column = 1,sticky = tk.E)
        self.btnCancel = tk.Button(self.add1,text = "取消",command = self.add1.destroy)
        self.btnCancel.grid(row = 2,column = 2,sticky = tk.W)
    def AddNew(self):
        Newid = self.entryid.get()
        NewName = self.entryName.get()
        conn = sqlite3.connect(r"c:\python\NewProduct.db")
        conn.execute("insert into region(id,name)values(?,?)",(Newid,NewName))
        conn.commit()
        conn.close()
        messagebox.showinfo("成功","新品添加成功")
    def reference2(self):
        conn = sqlite3.connect(r"c:\python\Turnover.db")
        cur = conn.execute("select date,Number from region")
        results = cur.fetchall()
        messagebox.showinfo("流水数据",results)
        conn.close()
    def reference3(self):
        conn = sqlite3.connect(r"c:\python\Staff.db")
        cur = conn.execute("select id,Password from region")
        results = cur.fetchall()
        messagebox.showinfo("员工",results)
        conn.close()
    def add2(self):
        self.add2 = tk.Toplevel(self.master)  
        self.system.title("添加新员工")
        self.lblid = tk.Label(self.add2, text = "新员工id")
        self.lblPassword = tk.Label(self.add2, text = "新员工密码")
        self.entryid = tk.Entry(self.add2)
        self.entryPassword = tk.Entry(self.add2)
        self.lblid.grid(row = 0,column = 0,sticky = tk.E)
        self.lblPassword.grid(row = 1,column = 0,sticky = tk.E)
        self.entryid.grid(row = 0,column = 1,columnspan = 2)
        self.entryPassword.grid(row = 1,column = 1,columnspan = 2)
        self.btnOk = tk.Button(self.add2,text = "添加",command = self.AddStaff)
        self.btnOk.grid(row = 2,column = 1,sticky = tk.E)
        self.btnCancel = tk.Button(self.add2,text = "取消",command = self.add2.destroy)
        self.btnCancel.grid(row = 2,column = 2,sticky = tk.W)
    def AddStaff(self):
        Newid = self.entryid.get()
        NewPassword = self.entryPassword.get()
        conn = sqlite3.connect(r"c:\python\Staff.db")
        conn.execute("insert into region(id,Password)values(?,?)",(Newid,NewPassword))
        conn.commit()
        conn.close()
        messagebox.showinfo("成功","新员工添加成功")
    def Delete(self):
        self.Delete = tk.Toplevel(self.master)  
        self.Delete.title("删除员工")
        self.lblid = tk.Label(self.Delete, text = "员工id")
        self.entryid = tk.Entry(self.Delete)
        self.lblid.grid(row = 0,column = 0,sticky = tk.E)
        self.entryid.grid(row = 0,column = 1,columnspan = 2)
        self.btnOk = tk.Button(self.Delete,text = "删除",command = self.DeleteStaff)
        self.btnOk.grid(row = 1,column = 1,sticky = tk.E)
        self.btnCancel = tk.Button(self.Delete,text = "取消",command = self.Delete.destroy)
        self.btnCancel.grid(row = 1,column = 2,sticky = tk.W)
    def DeleteStaff(self):
        Deleteid = self.entryid.get()
        conn = sqlite3.connect(r"c:\python\Staff.db")
        conn.execute("Delete from region where id = ?",(Deleteid))
        conn.commit()
        conn.close()
        messagebox.showinfo("成功","删除员工成功")

root = tk.Tk()
root.title("登录") 
app = Application(master=root)
app.mainloop()
                               
